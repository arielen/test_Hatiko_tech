name: Run Tests & Linting

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user -d test_db"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-api.txt
          pip install -r requirements-bot.txt
          pip install -r requirements-test.txt

      - name: Run Tests with Coverage
        run: pytest --cov=src --cov-report=xml --disable-warnings

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  lint:
    name: Run Ruff Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Ruff
        run: pip install ruff

      - name: Run Ruff Linter
        run: ruff check .

  tox:
    name: Run Tox Tests
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Tox
        run: pip install tox

      - name: Run Tox
        run: tox

  enforce-success:
    name: Enforce Merge Checks
    runs-on: ubuntu-latest
    needs: [test, lint, tox]
    if: always()
    steps:
      - name: Ensure all jobs passed
        run: |
          if [[ "${{ job.status }}" != "success" ]]; then
            echo "❌ Tests or Linting failed! Merge is blocked."
            exit 1
          fi
          echo "✅ All checks passed! Merge is allowed."
